# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - '*'

jobs:
  build:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        working-directory: techtitans-backend
        run: mvn -B package --file pom.xml
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: /path/to/artifact.jar
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.m2/repository/example
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install

      - name: Run unit tests
        run: mvn test

      - name: Check code quality with SpotBugs
        uses: spotbugs/spotbugs-action@4.4.4
        with:
              source: src/main/java
              excludeFilter: /tmp/spotbugs-exclude.xml
              xmlOutput: true
              spotbugsArgs: -effort:max -low -output-format:XML

      - name: Upload code coverage report to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
                token: ${{ secrets.CODECOV_TOKEN }}
                files: ./target/site/jacoco/jacoco.xml
                flags: unit_tests

      - name: Scan dependencies for known vulnerabilities
        uses: dependency-check-action@v2
        with:
                format: "XML"
                outputDirectory: "target/dependency-check"
                failOnCVSS: "7"

